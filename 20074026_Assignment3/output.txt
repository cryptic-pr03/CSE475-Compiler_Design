Enter the input relative path: 
LexToken(KEYWORD,'Module',1,0)
LexToken(IDENTIFIER,'PrimeCheck',1,7)
LexToken(KEYWORD,'Sub',1,22)
LexToken(IDENTIFIER,'Main',1,26)
LexToken(SEPARATOR,'(',1,30)
LexToken(SEPARATOR,')',1,31)
LexToken(KEYWORD,'Dim',1,50)
LexToken(IDENTIFIER,'number',1,54)
LexToken(KEYWORD,'As',1,61)
LexToken(KEYWORD,'Integer',1,64)
LexToken(IDENTIFIER,'Console',1,80)
LexToken(SEPARATOR,'.',1,87)
LexToken(IDENTIFIER,'Write',1,88)
LexToken(SEPARATOR,'(',1,93)
LexToken(LITERAL,'"Enter a number: "',1,94)
LexToken(SEPARATOR,')',1,112)
LexToken(IDENTIFIER,'number',1,122)
LexToken(OPERATOR,'=',1,129)
LexToken(KEYWORD,'Integer',1,131)
LexToken(SEPARATOR,'.',1,138)
LexToken(IDENTIFIER,'Parse',1,139)
LexToken(SEPARATOR,'(',1,144)
LexToken(IDENTIFIER,'Console',1,145)
LexToken(SEPARATOR,'.',1,152)
LexToken(IDENTIFIER,'ReadLine',1,153)
LexToken(SEPARATOR,'(',1,161)
LexToken(SEPARATOR,')',1,162)
LexToken(SEPARATOR,')',1,163)
LexToken(KEYWORD,'If',1,174)
LexToken(IDENTIFIER,'IsPrime',1,177)
LexToken(SEPARATOR,'(',1,184)
LexToken(IDENTIFIER,'number',1,185)
LexToken(SEPARATOR,')',1,191)
LexToken(KEYWORD,'Then',1,193)
LexToken(IDENTIFIER,'Console',1,210)
LexToken(SEPARATOR,'.',1,217)
LexToken(IDENTIFIER,'WriteLine',1,218)
LexToken(SEPARATOR,'(',1,227)
LexToken(IDENTIFIER,'number',1,228)
LexToken(OPERATOR,'&',1,235)
LexToken(LITERAL,'" is a prime number."',1,237)
LexToken(SEPARATOR,')',1,258)
LexToken(KEYWORD,'Else',1,268)
LexToken(IDENTIFIER,'Console',1,285)
LexToken(SEPARATOR,'.',1,292)
LexToken(IDENTIFIER,'WriteLine',1,293)
LexToken(SEPARATOR,'(',1,302)
LexToken(IDENTIFIER,'number',1,303)
LexToken(OPERATOR,'&',1,310)
LexToken(LITERAL,'" is not a prime number."',1,312)
LexToken(SEPARATOR,')',1,337)
LexToken(KEYWORD,'End',1,347)
LexToken(KEYWORD,'If',1,351)
LexToken(KEYWORD,'End',1,359)
LexToken(KEYWORD,'Sub',1,363)
LexToken(KEYWORD,'Function',1,372)
LexToken(IDENTIFIER,'IsPrime',1,381)
LexToken(SEPARATOR,'(',1,388)
LexToken(KEYWORD,'ByVal',1,389)
LexToken(IDENTIFIER,'num',1,395)
LexToken(KEYWORD,'As',1,399)
LexToken(KEYWORD,'Integer',1,402)
LexToken(SEPARATOR,')',1,409)
LexToken(KEYWORD,'As',1,411)
LexToken(KEYWORD,'Boolean',1,414)
LexToken(KEYWORD,'Dim',1,430)
LexToken(IDENTIFIER,'i',1,434)
LexToken(KEYWORD,'As',1,436)
LexToken(KEYWORD,'Integer',1,439)
LexToken(OPERATOR,'=',1,447)
LexToken(NUMBER,'1',1,449)
LexToken(KEYWORD,'Dim',1,459)
LexToken(IDENTIFIER,'factorCount',1,463)
LexToken(KEYWORD,'As',1,475)
LexToken(KEYWORD,'Integer',1,478)
LexToken(OPERATOR,'=',1,486)
LexToken(NUMBER,'0',1,488)
LexToken(KEYWORD,'While',1,498)
LexToken(IDENTIFIER,'i',1,504)
LexToken(OPERATOR,'*',1,506)
LexToken(IDENTIFIER,'i',1,508)
LexToken(OPERATOR,'<=',1,510)
LexToken(IDENTIFIER,'num',1,513)
LexToken(KEYWORD,'If',1,529)
LexToken(IDENTIFIER,'num',1,532)
LexToken(KEYWORD,'Mod',1,536)
LexToken(IDENTIFIER,'i',1,540)
LexToken(OPERATOR,'=',1,542)
LexToken(NUMBER,'0',1,544)
LexToken(KEYWORD,'Then',1,547)
LexToken(IDENTIFIER,'factorCount',1,568)
LexToken(OPERATOR,'+=',1,580)
LexToken(NUMBER,'1',1,583)
LexToken(KEYWORD,'End',1,597)
LexToken(KEYWORD,'If',1,601)
LexToken(IDENTIFIER,'i',1,616)
LexToken(OPERATOR,'+=',1,618)
LexToken(NUMBER,'1',1,621)
LexToken(KEYWORD,'End',1,631)
LexToken(KEYWORD,'While',1,635)
LexToken(KEYWORD,'If',1,650)
LexToken(IDENTIFIER,'factorCount',1,653)
LexToken(OPERATOR,'>',1,665)
LexToken(NUMBER,'2',1,667)
LexToken(KEYWORD,'Then',1,670)
LexToken(KEYWORD,'Return',1,687)
LexToken(KEYWORD,'True',1,694)
LexToken(KEYWORD,'Else',1,707)
LexToken(KEYWORD,'Return',1,725)
LexToken(KEYWORD,'False',1,732)
LexToken(KEYWORD,'End',1,746)
LexToken(KEYWORD,'If',1,750)
LexToken(KEYWORD,'End',1,757)
LexToken(KEYWORD,'Function',1,761)
LexToken(KEYWORD,'End',1,770)
LexToken(KEYWORD,'Module',1,774)
